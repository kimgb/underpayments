- content_for :title, "Am I Underpaid?"

%section#introduction
  %h3{ role: "presentation" }= t('start.intro')
  %p
    Hello there. If you've done <strong>work lately on a farm</strong>, I'm here to help you find out if you've been ripped off&mdash;and help you get your money, if you want.

  %p
    First things first. Just so we're clear, the minimum wage, with certain exceptions, for a casual farm worker is <strong>$21.61 per hour</strong>.

  %p
    So, you think you've been underpaid. Let's find out.

%form#frmCalculator.form{ method="POST" action="#" }
  .form-group
    %label{ for: "inputAward" } What industry did you work in?
    %select#inputAward.form-control{ name: "calc[award]" }
      %option{ value: "horticulture" } Horticulture (e.g. farms)
      %option.disabled{ value: "poultry_processing", disabled: true } Poultry processing

  .form-group
    %label{ for: "inputHours" } How many hours did you work per week, on average?
    %input#inputHours.form-control{ name: "calc[hours]", type: "number", min: "0", step: "any", required: true }

  .form-group.form-inline
    %label{ for: "inputStartDate" } When did your employment begin?<br/>
    = date_select :inputStartDate, nil, { order: [:day, :month, :year], start_year: Date.today.year, end_year: Date.today.year - 7 }, { class: "form-control" }

  .form-group.form-inline
    %label{ for: "inputEndDate" } When did your employment end?<br/>
    = date_select :inputEndDate, nil, { order: [:day, :month, :year], start_year: Date.today.year, end_year: Date.today.year - 7 }, { class: "form-control" }

  .form-group
    %label{ for: "inputPay" } And how much were you paid, per hour?
    %input#inputPay.form-control{ name: "calc[pay]", type: "number", min: "0", step: "0.01", required: true }

  .form-group
    %label{ for: "inputEmploymentType" } Were you casual or permanent?
    %select#inputEmploymentType.form-control{ name: "calc[emptype]" }
      %option{ value: "casual", selected: true } Casual
      %option{ value: "permanent" } Permanent

  %output#frmOutput

  .align-right
    %button#btnCalc.btn.btn-default{ type: "submit" } How Much Am I Underpaid?
    = link_to "Let's Fix This", new_user_path, id: "btnAction"

:javascript
  function dateFromDateSelect(sel) {
    // hoping Rails doesn't pull the rug out from under me with its '__ni' convention, for now
    return new Date($(sel + "__1i").val(), $(sel + "__2i").val(), $(sel + "__3i").val());
  }

  function dateDiffInWeeks(date1, date2) {
    // figure will be in milliseconds - multiply denominator appropriately
    return Math.abs(date1 - date2) / (1000*60*60*24*7);
  }

  function estimateHours() {
    var avgHrs = $("#inputHours").val(),
        weeksWorked = dateDiffInWeeks(dateFromDateSelect("#inputStartDate"), dateFromDateSelect("#inputEndDate"));

    return Math.round(avgHrs * weeksWorked);
  }

  function estimateMinPay() {
    var award = $("#inputAward").val(),
        emptype = $("#inputEmploymentType").val(),
        minWage = minWageSchedule[award][emptype];

    return (estimateHours() * minWage);
  }

  function estimateActualPay() {
    var wage = $("#inputPay").val();

    return (estimateHours() * wage).toFixed(2);
  }

  function naiveReverse(s) {
    return s.split("").reverse().join("");
  }

  function currencyFormat(num) {
    var ary = String(num).split(".");
    // reverse, chunk into lengths of up to 3, insert commas, reverse
    ary[0] = naiveReverse(naiveReverse(ary[0]).match(/.{1,3}/g).join(","));

    return ary.join(".");
  }

  function submitFrmCalculator(e) {
    e.preventDefault();

    var minPay = estimateMinPay(),
        actualPay = estimateActualPay(),
        output = "By the numbers, you were paid $" + currencyFormat(actualPay) + ". The legal bare minimum pay for the hours you worked is $" + currencyFormat(minPay) + ".";

    if (minPay > actualPay) {
      output = output + " This means you were underpaid $" + currencyFormat((minPay - actualPay).toFixed(2)) + ". Want to get it back?";

      $("#btnCalc").addClass("collapse");
      $("#btnAction").removeClass("collapse");
    }

    $("#frmOutput")[0].value = output;
  }

  var minWageSchedule = { horticulture: { casual: 21.61, permanent: 17.29 }, poultry_processing: { casual: 22.42, permanent: 17.94 } };

  $(document).ready(function(){
    $("#frmCalculator").on("submit", submitFrmCalculator);
  })
